//
// Dropdown menus
// --------------------------------------------------

@import 'variables.less';

// Utilities
@import "mixins/reset-filter.less";
@import "mixins/vendor-prefixes.less";

// Skins
@import "mixins/border-radius.less";

@import 'mixins/nav-divider.less';

:host {
  position: relative;
  display: block;
  padding: @nav-link-padding;
}

// Dropdown arrow/caret
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top:   @caret-width-base dashed;
  border-top:   @caret-width-base solid ~"\9"; // IE8
  border-right: @caret-width-base solid transparent;
  border-left:  @caret-width-base solid transparent;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

content[select=".dropdown-title"]::content .dropdown-title {
  display: inline;
}

// The dropdown menu (ul)
content[select=".dropdown-menu"]::content .dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: @zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  ul {
    min-width: 160px;
    padding: 5px 0;
    margin: 2px 0 0; // override default ul
    list-style: none;
    font-size: @font-size-base;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    background-color: @dropdown-bg;
    border: 1px solid @dropdown-fallback-border; // IE8 fallback
    border: 1px solid @dropdown-border;
    border-radius: @border-radius-base;
    .box-shadow(0 6px 12px rgba(0, 0, 0, .175));
    background-clip: padding-box;
    & > li {
      float: none;
    }
  }

  // Aligns the dropdown menu to right
  //
  // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  .divider {
    .nav-divider(@dropdown-divider-bg);
  }

  // Links within the dropdown menu
  ul > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    font-weight: normal;
    line-height: @line-height-base;
    color: @dropdown-link-color;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
  }
}

// Hover/Focus state
content[select=".dropdown-menu"]::content .dropdown-menu ul > li > a {
  &:hover,
  &:focus {
    text-decoration: none;
    color: @dropdown-link-hover-color;
    background-color: @dropdown-link-hover-bg;
  }
}

// Active state
content[select=".dropdown-menu"]::content .dropdown-menu ul > .active > a {
  &,
  &:hover,
  &:focus {
    color: @dropdown-link-active-color;
    text-decoration: none;
    outline: 0;
    background-color: @dropdown-link-active-bg;
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

content[select=".dropdown-menu"]::content .dropdown-menu ul > .disabled > a {
  &,
  &:hover,
  &:focus {
    color: @dropdown-link-disabled-color;
  }

  // Nuke hover/focus effects
  &:hover,
  &:focus {
    text-decoration: none;
    background-color: transparent;
    background-image: none; // Remove CSS gradient
    .reset-filter();
    cursor: @cursor-disabled;
  }
}

// Open state for the dropdown
.open {
  // Show the menu
  content[select=".dropdown-menu"]::content .dropdown-menu {
    display: block;
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  left: auto; // Reset the default from `.dropdown-menu`
  right: 0;
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  left: 0;
  right: auto;
}

// Dropdown section headers
content[select=".dropdown-menu"]::content .dropdown-menu .dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: @font-size-small;
  line-height: @line-height-base;
  color: @dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: (@zindex-dropdown - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
    border-top: 0;
    border-bottom: @caret-width-base dashed;
    border-bottom: @caret-width-base solid ~"\9"; // IE8
    content: "";
  }
  // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-bottom: 2px;
  }
}


// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media (min-width: @grid-float-breakpoint) {
  :host-context(.navbar-right) {
    content[select=".dropdown-menu"]::content .dropdown-menu {
      .dropdown-menu-right();
    }
    // Necessary for overrides of the default right aligned menu.
    // Will remove come v4 in all likelihood.
    .dropdown-menu-left {
      .dropdown-menu-left();
    }
  }
}

// _______________________________________/ END DROPDOWN OWN STYLE

// From the navs.less

a.dropdown-toggle {
  text-decoration: none; //

  &:hover,
  &:focus {
    text-decoration: none;
    background-color: @nav-link-hover-bg;
  }
}

:host-context(.disabled)  a.dropdown-toggle {
  color: @nav-disabled-link-color;

  &:hover,
  &:focus {
    color: @nav-disabled-link-hover-color;
    text-decoration: none;
    background-color: transparent;
    cursor: @cursor-disabled;
  }
}

// Open dropdowns
.open > a {
  &,
  &:hover,
  &:focus {
    background-color: @nav-link-hover-bg;
    border-color: @link-color;
  }
}

// _____________________________________/ END NAVS.LESS style

// NAVBAR style

:host-context(.navbar-nav) {

  @media (max-width: @grid-float-breakpoint-max) {
    // Dropdowns get custom display when collapsed
    .open content[select=".dropdown-menu"]::content .dropdown-menu {
      position: static;
      float: none;

      ul {
        width: auto;
        margin-top: 0;
        background-color: transparent;
        border: 0;
        box-shadow: none;
      }

      ul > li > a,
      .dropdown-header {
        padding: 5px 15px 5px 25px;
      }
      ul > li > a {
        line-height: @line-height-computed;
        &:hover,
        &:focus {
          background-image: none;
        }
      }
    }
  }
}

:host-context(.navbar-nav) content[select=".dropdown-menu"]::content .dropdown-menu ul {
  margin-top: 0;
  .border-top-radius(0);
}

// Menu position and menu caret support for dropups via extra dropup class
:host-context(.navbar-fixed-bottom) content[select=".dropdown-menu"]::content .dropdown-menu ul {
  margin-bottom: 0;
  .border-top-radius(@navbar-border-radius);
  .border-bottom-radius(0);
}

// Default Navbar

:host-context(.navbar-default) {
  // Dropdown menu items

    a.dropdown-toggle {
      // cursor: pointer;
      color: @navbar-default-link-color;

      &:hover,
      &:focus {
        color: @navbar-default-link-hover-color;
        background-color: @navbar-default-link-hover-bg;
      }
    }

    // Remove background color from open dropdown
    .open > a {
      &,
      &:hover,
      &:focus {
        background-color: @navbar-default-link-active-bg;
        color: @navbar-default-link-active-color;
      }
    }

  .open content[select=".dropdown-menu"]::content .dropdown-menu > ul {
    background-color: @navbar-default-bg;
    &>li>a {
      color: @navbar-default-link-color;
    }
    &>li>a:hover,
    &>li>a:focus {
      background-color: @nav-link-hover-bg;
      border-color: @link-color;
    }
  }

    @media (max-width: @grid-float-breakpoint-max) {
      // Dropdowns get custom display when collapsed
      .open content[select=".dropdown-menu"]::content .dropdown-menu {
        ul > li > a {
          color: @navbar-default-link-color;
          &:hover,
          &:focus {
            color: @navbar-default-link-hover-color;
            background-color: @navbar-default-link-hover-bg;
          }
        }
        ul > .active > a {
          &,
          &:hover,
          &:focus {
            color: @navbar-default-link-active-color;
            background-color: @navbar-default-link-active-bg;
          }
        }
        ul > .disabled > a {
          &,
          &:hover,
          &:focus {
            color: @navbar-default-link-disabled-color;
            background-color: @navbar-default-link-disabled-bg;
          }
        }
      }
    }
}

:host-context(.navbar-default .active) {
  a.dropdown-toggle {
    &,
    &:hover,
    &:focus {
      color: @navbar-default-link-active-color;
      background-color: @navbar-default-link-active-bg;
    }
  }
}

:host-context(.navbar-default .disabled) {
  a.dropdown-toggle {
    &,
    &:hover,
    &:focus {
      color: @navbar-default-link-disabled-color;
      background-color: @navbar-default-link-disabled-bg;
    }
  }
}

// Inverse navbar

:host-context(.navbar-inverse) {

  a.dropdown-toggle {
    color: @navbar-inverse-link-color;

    &:hover,
    &:focus {
      color: @navbar-inverse-link-hover-color;
      background-color: @navbar-inverse-link-hover-bg;
    }
  }

  .open > a {
    &,
    &:hover,
    &:focus {
      background-color: @navbar-inverse-link-active-bg;
      color: @navbar-inverse-link-active-color;
    }

    // Remove background color from open dropdown
    &[aria-expanded=true] {
      &,
      &:hover,
      &:focus {
        background-color: @navbar-inverse-link-active-bg;
        color: @navbar-inverse-link-active-color;
      }
    }
  }

  .open content[select=".dropdown-menu"]::content .dropdown-menu > ul {
    background-color: @navbar-inverse-bg;
    &>li>a {
      color: @navbar-inverse-link-color;
    }
    &>li>a:hover,
    &>li>a:focus {
      background-color: @navbar-inverse-link-active-bg;
      color: @navbar-inverse-link-active-color;
    }
  }

  @media (max-width: @grid-float-breakpoint-max) {
    // Dropdowns get custom display
    .open content[select=".dropdown-menu"]::content .dropdown-menu {
      ul > .dropdown-header {
        border-color: @navbar-inverse-border;
      }
      .divider {
        background-color: @navbar-inverse-border;
      }
      ul > li > a {
        color: @navbar-inverse-link-color;
        &:hover,
        &:focus {
          color: @navbar-inverse-link-hover-color;
          background-color: @navbar-inverse-link-hover-bg;
        }
      }
      ul > .active > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-inverse-link-active-color;
          background-color: @navbar-inverse-link-active-bg;
        }
      }
      ul > .disabled > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-inverse-link-disabled-color;
          background-color: @navbar-inverse-link-disabled-bg;
        }
      }
    }
  }
}

:host-context(.navbar-inverse .active) {
  a.dropdown-toggle {
    &,
    &:hover,
    &:focus {
      color: @navbar-inverse-link-active-color;
      background-color: @navbar-inverse-link-active-bg;
    }
  }
}

:host-context(.navbar-inverse .disabled) {
  a.dropdown-toggle {
    &,
    &:hover,
    &:focus {
      color: @navbar-inverse-link-disabled-color;
      background-color: @navbar-inverse-link-disabled-bg;
    }
  }
}


// ________________________________________/ END OF NAVBAR style